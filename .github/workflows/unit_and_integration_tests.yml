name: CI

on: [push, pull_request]

jobs:

  tox-tests:
    name: Tox Tests - ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 5
    strategy:
      matrix:
        include:
          - {name: Linux,     python-version: 3.9, os: ubuntu-latest,   tox: py}
          - {name: Windows,   python-version: 3.9, os: windows-latest,  tox: py}
          - {name: Mac,       python-version: 3.9, os: macos-latest,    tox: py}
          - {name: Py2.7,     python-version: 2.7, os: ubuntu-latest,   tox: py}
          - {name: Py3.6,     python-version: 3.6, os: ubuntu-latest,   tox: py}
          - {name: Py3.7,     python-version: 3.7, os: ubuntu-latest,   tox: py}
          - {name: Py3.8,     python-version: 3.8, os: ubuntu-latest,   tox: py}
          - {name: Py3.9,     python-version: 3.9, os: ubuntu-latest,   tox: py}
          - {name: Py3.x,     python-version: 3.x, os: ubuntu-latest,   tox: py}
          - {name: RF-3.1.1,  python-version: 3.9, os: ubuntu-latest,   tox: "py-robotframework{311}"}
          - {name: RF-3.2,    python-version: 3.9, os: ubuntu-latest,   tox: "py-robotframework{32}"}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Run Tox
      run: tox -e ${{ matrix.tox }}
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: ${{ matrix.os }}_py${{ matrix.python-version }}_log.html
        path: .tox/py_log.html
        retention-days: 7

  code-cov:
    name: Code Coverage
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev,codecov]
    - name: Run Pylint
      run: pylint rfremoterunner tests --fail-under 8.5
    - name: Run Code Coverage
      run: |
        pytest --cov=rfremoterunner --cov-fail-under=75

  split-box-test:
    name: Split Box Test
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    services:
      # Launch a container that will checkout this commit and launch the rfagent.
      # Closely thing we can get to the rfagent running on a  'different machine'
      rfagent:
        image: chrisbrookes93/appservicecontainer:3.8-slim-buster-v0.0.1
        env:
          GIT_URL: git://github.com/${{ github.repository }}.git
          GIT_COMMIT_HASH: ${{ github.sha }}
          APP_LAUNCH_CMDLINE: rfagent -p 1471
        ports:
          - 1471:1471

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install the package
        run: |
          pip install .
      # We need to give the service time to checkout, install and run the rfagent
      - name: Wait for rfagent service to start
        uses: nick-invision/retry@v2
        with:
          max_attempts: 5
          timeout_seconds: 15
          command: curl http://0.0.0.0:1471
      - name: Execute a remote run
        run: |
          rfremoterun 127.0.0.1 tests/unit_tests/rf_client_test_resources
      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
